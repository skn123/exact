from graphviz import Digraph
dot = Digraph(comment='The Round Table')

dot.node('prev_out'      , label='h_t-1' , shape='square')
dot.node('wh_update'      , label='Wh_u' , shape='triangle')
dot.node('wx_update'      , label='Wx_u' , shape='triangle')
dot.node('wh_reset'      , label='Wh_r' , shape='triangle')
dot.node('wx_reset'      , label='Wx_r' , shape='triangle')
dot.node('wh_mem'      , label='Wh_m' , shape='triangle')
dot.node('wx_mem'      , label='Wx_m' , shape='triangle')
dot.node('input'         , label='X'     , shape='square')
dot.node('prod_wh_update'         , label='x'     , shape='circle')
dot.node('prod_wx_update'         , label='x'     , shape='circle')
dot.node('prod_wh_reset'         , label='x'     , shape='circle')
dot.node('prod_wx_reset'         , label='x'     , shape='circle')
dot.node('prod_wh_mem'         , label='x'     , shape='circle')
dot.node('prod_wx_mem'         , label='x'     , shape='circle')
dot.node('PlusUpdate', label='+'     , shape='circle')
dot.node('PlusReset', label='+'     , shape='circle')
dot.node('PlusMemory', label='+'     , shape='circle')
dot.node('PlusOut', label='+'     , shape='circle')
dot.node('sigmoidUpdate' , label='&sigma;'     , shape='square')
dot.node('sigmoidReset'  , label='&sigma;'     , shape='square')
dot.node('tanh'  , label='tanh'     , shape='square')
dot.node('productOut1'  , label='x'     , shape='circle')
dot.node('productOut2'  , label='x'     , shape='circle')
dot.node('productMemory'  , label='x'     , shape='circle')
dot.node('1'  , label='1'     , shape='square')
dot.node('1-sigmoidUpdate'  , label='-'     , shape='circle')
dot.node('out'  , label='Output'     , shape='square')


dot.edge('input'            , 'prod_wx_update', constraint='true', arrowhead='false')
dot.edge('wx_update'        , 'prod_wx_update', constraint='true', arrowhead='false')
dot.edge('prev_out'         , 'prod_wh_update', constraint='true', arrowhead='false')
dot.edge('wh_update'        , 'prod_wh_update', constraint='true', arrowhead='false')
dot.edge('prod_wx_update'   , 'PlusUpdate', constraint='true', arrowhead='false')
dot.edge('prod_wh_update'   , 'PlusUpdate', constraint='true', arrowhead='false')
dot.edge('PlusUpdate'       , 'sigmoidUpdate', constraint='true', arrowhead='false')


dot.edge('1'    , '1-sigmoidUpdate', constraint='true', arrowhead='false')
dot.edge('sigmoidUpdate'    , '1-sigmoidUpdate', constraint='true', arrowhead='false')

dot.edge('input'            , 'prod_wx_reset', constraint='true', arrowhead='false')
dot.edge('wx_reset'        , 'prod_wx_reset', constraint='true', arrowhead='false')
dot.edge('prev_out'         , 'prod_wh_reset', constraint='true', arrowhead='false')
dot.edge('wh_reset'        , 'prod_wh_reset', constraint='true', arrowhead='false')
dot.edge('prod_wx_reset'   , 'PlusReset', constraint='true', arrowhead='false')
dot.edge('prod_wh_reset'   , 'PlusReset', constraint='true', arrowhead='false')
dot.edge('PlusReset'       , 'sigmoidReset', constraint='true', arrowhead='false')


dot.edge('input'            , 'prod_wx_mem', constraint='true', arrowhead='false')
dot.edge('wx_mem'         , 'prod_wx_mem', constraint='true', arrowhead='false')
dot.edge('prev_out'         , 'prod_wh_mem', constraint='true', arrowhead='false')
dot.edge('wh_mem'        , 'prod_wh_mem', constraint='true', arrowhead='false')
dot.edge('sigmoidReset', 'productMemory', constraint='true', arrowhead='false')
dot.edge('prod_wh_mem', 'productMemory', constraint='true', arrowhead='false')
dot.edge('prod_wx_mem'   , 'PlusMemory', constraint='true', arrowhead='false')
dot.edge('productMemory'   , 'PlusMemory', constraint='true', arrowhead='false')
dot.edge('PlusMemory'       , 'tanh', constraint='true', arrowhead='false')

dot.edge('1-sigmoidUpdate'  , 'productOut2', constraint='true', arrowhead='false')
dot.edge('tanh', 'productOut2', constraint='true', arrowhead='false')
dot.edge('sigmoidUpdate', 'productOut1', constraint='true', arrowhead='false')
dot.edge('prev_out', 'productOut1', constraint='true', arrowhead='false')
dot.edge('productOut1', 'PlusOut', constraint='true', arrowhead='false')
dot.edge('productOut2', 'PlusOut', constraint='true', arrowhead='false')
dot.edge('PlusOut', 'out', constraint='true', arrowhead='false')

print(dot.source)
dot.render('gru_node.gv', view=True )  # doctest: +SKIP
