digraph CNN {
	{
		rank = source;
        x           [shape=box,color=blue,label="x",xlabel="input"];
        h_prev      [shape=box,color=blue,label="h_prev", xlabel="previous output"];
	}

    f_bias      [shape=diamond,color=blue,label="f_bias"];
    fw          [shape=diamond,color=blue,label="fw"];
    fu          [shape=diamond,color=blue,label="fu"];

    xfw         [shape=circle,color=red,label="*",xlabel="x * fw"];
    hfu         [shape=circle,color=red,label="*",xlabel="h * fu"];

    x -> xfw;
    fw -> xfw;

    h_prev -> hfu;
    fu -> hfu;



    f_sum       [shape=circle,color=orange,label="+",xlabel="f_sum"];
    //f           [shape=circle,color=purple,label="sigmoid",xlabel="f"];
    f           [shape=circle,color=purple,label="&sigma;",xlabel="f"];

    f_bias -> f_sum;
    xfw -> f_sum;
    hfu -> f_sum;

    f_sum -> f;


    h_bias      [shape=diamond,color=blue,label="h_bias"];
    hw          [shape=diamond,color=blue,label="hw"];
    hu          [shape=diamond,color=blue,label="hu"];

    xhw         [shape=circle,color=red,label="*",xlabel="x * hw"];
    hufh        [shape=circle,color=red,label="*",xlabel="hu * f * h_prev"];

    x -> xhw;
    hw -> xhw;

    hu -> hufh;
    f -> hufh;
    h_prev -> hufh;

    h_sum       [shape=circle,color=orange,label="+",xlabel="h_sum"];
    h_tanh      [shape=circle,color=purple,label="tanh",xlabel="h_tanh"];

    xhw -> h_sum;
    hufh -> h_sum;
    h_bias -> h_sum;

    h_sum -> h_tanh;




    neg_1           [shape=box,color=blue,label="-1"];
    neg_f           [shape=circle,color=red,label="*", xlabel="-f"]

    neg_1 -> neg_f;
    f -> neg_f;

    plus_1          [shape=box,color=blue,label="1"];
    one_minus_f     [shape=circle,color=orange,label="+",xlabel="(1 - f)"];

    plus_1 -> one_minus_f;
    neg_f -> one_minus_f;

    f_h_tanh        [shape=circle,color=red,label="*",xlabel="(1 - f) * h_tanh"];

    one_minus_f -> f_h_tanh;
    h_tanh -> f_h_tanh;


		f_h_prev				[shape=circle,color=red,label="*",xlabel="f * h_prev"];

		f -> f_h_prev;
		h_prev -> f_h_prev;

	{
		rank = sink;

        legend [shape=box,
            label=<
                <table>
                <tr><td>f = sigmoid(fw*x + fu*h_prev * f_bias)</td></tr>
                <tr><td>h = tanh(hw*x + f*hu*h_prev * h_bias)</td></tr>
                <tr><td>out = (1-f)*h_prev + f*h</td></tr>
                </table>
                >]

        out       [shape=circle,color=orange,label="+",xlabel="out"];
    }

    f_h_tanh -> out;
    f_h_prev -> out;
    out -> h_prev;

    legend -> out [style=invis];


/**/
}
